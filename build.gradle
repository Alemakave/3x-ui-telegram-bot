import java.text.SimpleDateFormat

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ru.alemakave.xuitelegrambot'
version = '0.1.2-ALPHA'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
//	implementation 'org.postgresql:postgresql'
//	implementation 'org.liquibase:liquibase-core'
	implementation group: 'com.google.zxing', name: 'javase', version: '3.5.1'
	implementation group: 'com.google.zxing', name: 'core', version: '3.5.1'
	implementation 'com.github.pengrad:java-telegram-bot-api:8.1.0'
	implementation 'org.reflections:reflections:0.9.11'

	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.32'
	compileOnly 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('buildSnapshot') {
	group "build"

	SimpleDateFormat format = new SimpleDateFormat("yyyyMMddhhmmss")
	version = version.toString().split("-")[0] + "-snapshot+" + format.format(new Date())
	dependsOn("build")
}

tasks.register('generateBuildInfoClass') {
	var outputDir = file("$buildDir/generated/sources/src/main/java/" + project.group.replace('.', File.separator))
	outputs.dir outputDir
	doLast {
		outputDir.exists() || outputDir.mkdirs()

		new File(outputDir, "BuildInfo.java").write("package " + project.group + ";\n\npublic class BuildInfo {\n" + "    public static final String BUILD_VERSION = \"" + version + "\";\n}")
	}
}

sourceSets.main.java.srcDir "$buildDir/generated/sources/src/main/java"
compileJava.dependsOn generateBuildInfoClass
